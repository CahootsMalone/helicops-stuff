import os

PATH = "C:/Stuff-5/Helicops/CD contents/HELICOPS/"

DAT_EXTENSION = ".DAT"
OFFSET_TABLE_START = 20
TABLE_ENTRY_SIZE = 44

def xor_bytes(bytes, xor_value):
    return [byte ^ xor_value for byte in bytes]

def get_uint(data, start, length):
    return int.from_bytes(data[start:start+length], byteorder='little', signed=False)

dat_files = []

for file in os.listdir(PATH):
    if file.endswith(DAT_EXTENSION):
        dat_files.append(file)

OUT_PATH = "helicops-file-summary.md"

with open(OUT_PATH, 'w') as out:

    out.write("# Helicops DAT File Summary\n\n")
    out.write("Generated by `generate-helicops-file-summaries.py`\n")

    for dat_file in dat_files:

        out.write(f"\n## {dat_file}\n\n")

        with open(os.path.join(PATH, dat_file), 'rb') as file:
            data = file.read()

        if len(data) == 0:
            out.write("File is empty.\n\n")
            continue

        unknown_1 = get_uint(data, 8, 4)
        unknown_2 = get_uint(data, 12, 4)
        entry_count = get_uint(data, 16, 4)

        out.write(f"* Unknown 1: {unknown_1}\n")
        out.write(f"* Unknown 2 (probably whether or not data are compressed): {unknown_2}\n")
        out.write(f"* Entry count: {entry_count}\n")

        out.write("\n### Table Entries\n\n")
        out.write("Name | Start Offset | Length (Uncompressed) | Length (Compressed)\n")
        out.write("--- | --- | --- | ---\n")

        for i in range(entry_count):
            entry_start = OFFSET_TABLE_START + i*TABLE_ENTRY_SIZE

            xored_entry = xor_bytes(data[entry_start:entry_start + TABLE_ENTRY_SIZE], 0xAA)

            name = (bytes(xored_entry[0:32]).split(b'\x00')[0]).decode('ascii', 'ignore')
            start = get_uint(xored_entry, 32, 4)
            length_uncompressed = get_uint(xored_entry, 36, 4)
            length_compressed = get_uint(xored_entry, 40, 4)

            out.write(f"{name} | {start} | {length_uncompressed} | {length_compressed}\n")
